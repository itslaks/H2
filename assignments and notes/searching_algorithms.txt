#Linear search
def l_s(a,t):
    for index, e in enumerate(a):
        if e == t:
            return f"Element found in the index {index}"
    return "Not found"

a = list(map(int, input("Enter numbers: ").split()))
t = int(input("number to search: "))
print(l_s(a,t))

How Linear Search Works:
Start from the first element and check each one.
If the target is found, return its index.
If the loop finishes without finding it, return -1.




#Binary search
def binary_search(arr, target):
    left, right = 0, len(arr) - 1
    while left <= right:
        mid = (left + right) // 2  # Find the middle index
        if arr[mid] == target:
            return mid  # Target found, return index
        elif arr[mid] < target:
            left = mid + 1  # Search in the right half
        else:
            right = mid - 1  # Search in the left half
    return -1  # Target not found

# Example usage
arr = [2, 3, 5, 6, 8]  # Binary search requires a sorted array
target = int(input("Enter value to search: "))
result = binary_search(arr, target)

if result != -1:
    print(f"Element found at index {result}")
else:
    print("Element not found")

How Binary Search Works:
Check the middle element:
If it’s the target, return its index.
If it’s smaller than the target, search the right half.
If it’s larger, search the left half.
Repeat until the target is found or the list is exhausted.